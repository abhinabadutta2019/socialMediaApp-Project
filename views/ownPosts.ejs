<%- include('partials/header') %>
<h2>Your own posts</h2>
<div>
  <% if ( myArray.length>0) { %> <% for( let index = 0; index < myArray.length;
  index++ ) { %>
  <!--  -->
  <li id="<%=myArray[index]._id %>">
    <%if(myArray[index].imagePaths.length>0){ const
    imageWidth=200/myArray[index].imagePaths.length %> <% for (let imageIndex =
    0; imageIndex < myArray[index].imagePaths.length; imageIndex++) { %>

    <div
      style="
        max-width: <%=imageWidth %>px;
        max-height: 150px;
        display: inline-block;
      "
    >
      <img
        src="<%= myArray[index].imagePaths[imageIndex] %>"
        alt="Image"
        style="max-width: 100%; max-height: 100%"
      />
    </div>
    <% } %> <% } %>
    <!--  -->
    <p>description : <%=myArray[index].description %></p>
    <p>likes : <%=myArray[index].likes.length %></p>
    <!--  -->
    <div>
      <button onclick="postLikedByButton()">postLikedBy</button>
    </div>
    <!--  -->
    <br />
    <!--  -->
    <div>
      <button onclick="updatePostButton()">updatePost</button>
    </div>
    <!--  -->
    <br />
    <button onclick="deletePost()">DeletePost</button>
    <br /><br />
  </li>

  <% } %> <% } else{%>
  <p>No post created by user</p>
  <%}%>
</div>
<script>
  async function updatePostButton() {
    // console.log("Hy");
    const postUpdateButton = event.target;
    const postUpdateButtonParent = postUpdateButton.parentElement;
    const postUpdateButtonGrandParent = postUpdateButtonParent.parentElement;
    const postUpdateButtonGPId = postUpdateButtonGrandParent.id;
    //
    // console.log(postUpdateButtonGPId, "postUpdateButtonGPId");
    //
    window.location.href = `${window.location.origin}/post/update/${postUpdateButtonGPId}`;
  }
  //
  async function postLikedByButton() {
    //
    try {
      //
      const postLikedButton = event.target;
      const postLikedButtonParent = postLikedButton.parentElement;
      const postLikedButtonGrandParent = postLikedButtonParent.parentElement;
      //
      const postLikedButtonGPId = postLikedButtonGrandParent.id;
      //
      // console.log(postLikedButtonGPId, "postLikedButtonGPId");

      //redirect
      window.location.href = `${window.location.origin}/post/postLiked/${postLikedButtonGPId}`;
      //
    } catch (err) {
      console.log(err);
    }
  }
  //
  async function deletePost() {
    //
    try {
      const deleteButton = event.target;
      const deleteButtonParent = deleteButton.parentElement;
      const deleteParentId = deleteButtonParent.id;
      // console.log(deleteParentId, "deleteParentId");

      const responseDelete = await fetch(
        `${window.location.origin}/post/delete/${deleteParentId}`,
        {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
          },
        }
      );
      //
      const deleteResult = await responseDelete.json();

      console.log(deleteResult, "deleteResult");

      if (deleteResult.message == "post delete success") {
        setTimeout(function () {
          //redirect
          window.location.href = `${window.location.origin}/post/ownposts`;
        }, 1000);
      }

      // window.location.href = `${window.location.origin}/post/ownposts`;
    } catch (err) {
      console.log(err);
    }
  }
</script>
